"use strict";var canvas,ctx,stage,output,rootElement,numCirclesX,numCirclesY,circles,circle1,circle2,pointA,pointB,cellSize=30,SIZE=50,maxRadius=21,lerp=function(e,t,i){return e*(1-i)+t*i},clamp=function(e,t,i){t=1<arguments.length&&void 0!==t?t:0,i=2<arguments.length&&void 0!==i?i:1;return Math.min(i,Math.max(t,e))},fill="#E0C3FC";function init(){rootElement=document.documentElement;var e=window.getComputedStyle(rootElement);fill=e.getPropertyValue("--c2"),canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d"),(stage=new createjs.Stage("canvas")).enableMouseOver(10),createjs.Touch.enable(stage),stage.mouseMoveOutside=!0,handleResize()}function addCircle(e,t,i,n){var a=new createjs.Shape;return a.graphics.beginFill(n).drawCircle(0,0,i),a.x=e,a.y=t,stage.addChild(a),a}function makeCircles(){circles=[];for(var e=0;e<numCirclesY;e+=1)for(var t=0;t<numCirclesX;t+=1){var i=addCircle(t*cellSize+.5*cellSize,e*cellSize+.5*cellSize,2,fill);circles.push(i)}}function addControl(e,t){t=addCircle(e,t,10,"black");return t.graphics.endFill(),t.graphics.setStrokeStyle(1),t.graphics.beginStroke("#FFFFFF"),t.graphics.drawCircle(0,0,10),t.on("pressmove",drag),t.cursor="grab",t}function loop(){circles.forEach(function(e){var t=project({x:e.x,y:e.y},{x:pointA.x,y:pointA.y},{x:pointB.x,y:pointB.y}).t,t=Math.sqrt(maxRadius*maxRadius*t),t=clamp(t,0,maxRadius);e.graphics.clear(),e.graphics.beginFill(fill).drawCircle(0,0,t)})}function drag(e){e.target.x=e.stageX,e.target.y=e.stageY,loop(),stage.update()}function sizeCanvas(){stage.canvas.width=window.innerWidth,stage.canvas.height=window.innerHeight}function handleResize(){stage.removeAllChildren(),sizeCanvas(),numCirclesX=Math.ceil(innerWidth/cellSize),numCirclesY=Math.ceil(innerHeight/cellSize),makeCircles(),pointA=addControl(canvas.width/3,canvas.height/5),pointB=addControl(2*canvas.width/3,4*canvas.height/5),loop(),stage.update()}function throttled(t){var i=!1;return function(e){i||(window.requestAnimationFrame(function(){t(e),i=!1}),i=!0)}}function project(e,t,i){var n=i.x-t.x,a=i.y-t.y,r=n*n+a*a,c=(e.x-t.x)*n+(e.y-t.y)*a,r=Math.min(1,Math.max(0,c/r)),c=(i.x-t.x)*(e.y-t.y)-(i.y-t.y)*(e.x-t.x);return{point:{x:t.x+n*r,y:t.y+a*r},left:c<1,dot:c,t:r}}window.addEventListener("resize",throttled(handleResize));